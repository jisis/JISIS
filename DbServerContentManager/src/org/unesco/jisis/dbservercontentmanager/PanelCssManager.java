/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelCssManager.java
 *
 * Created on 9 f√©vr. 2010, 17:43:10
 */

package org.unesco.jisis.dbservercontentmanager;

import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import org.openide.util.Exceptions;
import org.unesco.jisis.corelib.common.Global;
import org.unesco.jisis.corelib.exceptions.DbException;
import org.unesco.jisis.dbservercontentmanager.MutableList.FileItem;
import org.unesco.jisis.gui.TextFilePreview;
import org.unesco.jisis.jisiscore.client.ClientDatabaseProxy;
import org.unesco.jisis.jisisutils.FileExtFilter;

/**
 *
 * @author jcd
 */
public class PanelCssManager extends javax.swing.JPanel {

   private ClientDatabaseProxy db_;
   private DefaultListModel modelServerList_;

    /** Creates new form PanelCssManager */
   public PanelCssManager(ClientDatabaseProxy db) {
      db_ = db;
      initComponents();
      modelServerList_ = new DefaultListModel();
      updateServerList();
   }
   private void updateServerList() {
      try {
         modelServerList_.clear();
         String[] fileNames = db_.getCssFileNames();

         for (String name : fileNames) {
            modelServerList_.addElement(name);
         }
         lstServerFiles.setModel(modelServerList_);
      } catch (Exception ex) {
         Exceptions.printStackTrace(ex);
      }
      lstServerFiles.validate();
   }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      panelTransferFiles = new javax.swing.JPanel();
      btnSelect = new javax.swing.JButton();
      btnRemove = new javax.swing.JButton();
      btnRemoveAll = new javax.swing.JButton();
      jScrollPane1 = new javax.swing.JScrollPane();
      lstTransferFiles = new MutableList();
      jLabel1 = new javax.swing.JLabel();
      panelServerFiles = new javax.swing.JPanel();
      jScrollPane2 = new javax.swing.JScrollPane();
      lstServerFiles = new javax.swing.JList();
      btnRemoveFromServer = new javax.swing.JButton();
      btnRemoveAllFromServer = new javax.swing.JButton();
      jLabel2 = new javax.swing.JLabel();
      btnDoTransfer = new javax.swing.JButton();
      jLabel3 = new javax.swing.JLabel();

      panelTransferFiles.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

      btnSelect.setText(org.openide.util.NbBundle.getMessage(PanelCssManager.class, "PanelCssManager.btnSelect.text")); // NOI18N
      btnSelect.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSelectActionPerformed(evt);
         }
      });

      btnRemove.setText(org.openide.util.NbBundle.getMessage(PanelCssManager.class, "PanelCssManager.btnRemove.text")); // NOI18N
      btnRemove.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRemoveActionPerformed(evt);
         }
      });

      btnRemoveAll.setText(org.openide.util.NbBundle.getMessage(PanelCssManager.class, "PanelCssManager.btnRemoveAll.text")); // NOI18N
      btnRemoveAll.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRemoveAllActionPerformed(evt);
         }
      });

      jScrollPane1.setViewportView(lstTransferFiles);

      jLabel1.setText(org.openide.util.NbBundle.getMessage(PanelCssManager.class, "PanelCssManager.jLabel1.text")); // NOI18N

      javax.swing.GroupLayout panelTransferFilesLayout = new javax.swing.GroupLayout(panelTransferFiles);
      panelTransferFiles.setLayout(panelTransferFilesLayout);
      panelTransferFilesLayout.setHorizontalGroup(
         panelTransferFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(panelTransferFilesLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(panelTransferFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
               .addComponent(btnSelect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(btnRemoveAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(18, 18, 18)
            .addGroup(panelTransferFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jLabel1)
               .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(23, Short.MAX_VALUE))
      );
      panelTransferFilesLayout.setVerticalGroup(
         panelTransferFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(panelTransferFilesLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panelTransferFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(panelTransferFilesLayout.createSequentialGroup()
                  .addComponent(btnSelect)
                  .addGap(18, 18, 18)
                  .addComponent(btnRemove)
                  .addGap(18, 18, 18)
                  .addComponent(btnRemoveAll))
               .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      panelServerFiles.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

      jScrollPane2.setViewportView(lstServerFiles);

      btnRemoveFromServer.setText(org.openide.util.NbBundle.getMessage(PanelCssManager.class, "PanelCssManager.btnRemoveFromServer.text")); // NOI18N
      btnRemoveFromServer.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRemoveFromServerActionPerformed(evt);
         }
      });

      btnRemoveAllFromServer.setText(org.openide.util.NbBundle.getMessage(PanelCssManager.class, "PanelCssManager.btnRemoveAllFromServer.text")); // NOI18N
      btnRemoveAllFromServer.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRemoveAllFromServerActionPerformed(evt);
         }
      });

      jLabel2.setText(org.openide.util.NbBundle.getMessage(PanelCssManager.class, "PanelCssManager.jLabel2.text")); // NOI18N

      javax.swing.GroupLayout panelServerFilesLayout = new javax.swing.GroupLayout(panelServerFiles);
      panelServerFiles.setLayout(panelServerFilesLayout);
      panelServerFilesLayout.setHorizontalGroup(
         panelServerFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(panelServerFilesLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(panelServerFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelServerFilesLayout.createSequentialGroup()
                  .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addGroup(panelServerFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                     .addComponent(btnRemoveFromServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                     .addComponent(btnRemoveAllFromServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                  .addGap(8, 8, 8))
               .addComponent(jLabel2))
            .addContainerGap())
      );
      panelServerFilesLayout.setVerticalGroup(
         panelServerFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(panelServerFilesLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panelServerFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(panelServerFilesLayout.createSequentialGroup()
                  .addComponent(btnRemoveFromServer)
                  .addGap(18, 18, 18)
                  .addComponent(btnRemoveAllFromServer))
               .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(12, Short.MAX_VALUE))
      );

      btnDoTransfer.setText(org.openide.util.NbBundle.getMessage(PanelCssManager.class, "PanelCssManager.btnDoTransfer.text")); // NOI18N
      btnDoTransfer.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnDoTransferActionPerformed(evt);
         }
      });

      jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
      jLabel3.setText(org.openide.util.NbBundle.getMessage(PanelCssManager.class, "PanelCssManager.jLabel3.text")); // NOI18N

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addGap(289, 289, 289)
                  .addComponent(jLabel3))
               .addGroup(layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(panelTransferFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(18, 18, 18)
                  .addComponent(btnDoTransfer)
                  .addGap(29, 29, 29)
                  .addComponent(panelServerFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(119, Short.MAX_VALUE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel3)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                     .addComponent(panelServerFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                     .addComponent(panelTransferFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
               .addGroup(layout.createSequentialGroup()
                  .addGap(80, 80, 80)
                  .addComponent(btnDoTransfer)))
            .addContainerGap())
      );
   }// </editor-fold>//GEN-END:initComponents
 private File[] selectFiles() {

       //prefs = Preferences.userNodeForPackage(this.getClass());
       String lastDir = Global.prefs_.get("CSS_MANAGER_INPUT_DIR", "");
       JFileChooser fc = new JFileChooser(lastDir);
       fc.setMultiSelectionEnabled(true);

       FileExtFilter filter = new FileExtFilter("CSS Files","css, txt, extensions");
       filter.addExtension("css");
       filter.addExtension("txt");

       fc.addChoosableFileFilter(filter);

       fc.setAccessory(new TextFilePreview(fc));


        fc.showOpenDialog(this);

        File[] files;
        if ((files = fc.getSelectedFiles())!= null && files.length>0) {
           Global.prefs_.put("CSS_MANAGER_INPUT_DIR", files[0].getAbsolutePath());
            return files;
        }
        return null;
    }

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
       File[] files = selectFiles();
       for (File file : files) {
          String fileName = file.getAbsolutePath();
          ((MutableList) lstTransferFiles).addElement(file);
       }
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        ((MutableList) lstTransferFiles).removeSelectedElements();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAllActionPerformed
       ((MutableList) lstTransferFiles).removeAllElements();
    }//GEN-LAST:event_btnRemoveAllActionPerformed

    private void btnDoTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoTransferActionPerformed
       int n = lstTransferFiles.getModel().getSize();
       for (int i=0; i<n; i++) {
         try {
            FileItem fileItem = (FileItem) lstTransferFiles.getModel().getElementAt(i);
            db_.saveCss(fileItem.file.getAbsolutePath(), null);
         }
         catch (Exception ex) {
            Exceptions.printStackTrace(ex);
         }
       }
       updateServerList();
    }//GEN-LAST:event_btnDoTransferActionPerformed

    private void btnRemoveFromServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFromServerActionPerformed
       try {
          int[] indices = lstServerFiles.getSelectedIndices();
          for (int i = indices.length - 1; i >= 0; --i) {

             String fileName = (String) lstServerFiles.getModel().getElementAt(indices[i]);
             db_.removeCss(fileName);


          }
          updateServerList();
       } catch (DbException ex) {
          Exceptions.printStackTrace(ex);
       }
    }//GEN-LAST:event_btnRemoveFromServerActionPerformed

    private void btnRemoveAllFromServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAllFromServerActionPerformed
        try {
          for (int i = 0; i <lstServerFiles.getModel().getSize(); i++) {
             String fileName = (String) lstServerFiles.getModel().getElementAt(i);
             db_.removeCss(fileName);
          }
          updateServerList();
       } catch (DbException ex) {
          Exceptions.printStackTrace(ex);
       }
    }//GEN-LAST:event_btnRemoveAllFromServerActionPerformed


   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton btnDoTransfer;
   private javax.swing.JButton btnRemove;
   private javax.swing.JButton btnRemoveAll;
   private javax.swing.JButton btnRemoveAllFromServer;
   private javax.swing.JButton btnRemoveFromServer;
   private javax.swing.JButton btnSelect;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JList lstServerFiles;
   private javax.swing.JList lstTransferFiles;
   private javax.swing.JPanel panelServerFiles;
   private javax.swing.JPanel panelTransferFiles;
   // End of variables declaration//GEN-END:variables

}
