/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelStopWordManager.java
 *
 * Created on 5 f√©vr. 2010, 18:21:51
 */

package org.unesco.jisis.dbservercontentmanager;

import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import org.openide.util.Exceptions;
import org.unesco.jisis.corelib.common.Global;
import org.unesco.jisis.corelib.exceptions.DbException;
import org.unesco.jisis.dbservercontentmanager.MutableList.FileItem;
import org.unesco.jisis.gui.TextFilePreview;
import org.unesco.jisis.jisiscore.client.ClientDatabaseProxy;
import org.unesco.jisis.jisisutils.FileExtFilter;

/**
 *
 * @author jcd
 */
public class PanelStopWordManager extends javax.swing.JPanel {

   private ClientDatabaseProxy db_;
   private DefaultListModel modelServerList_;

   /** Creates new form PanelStopWordManager */
   public PanelStopWordManager(ClientDatabaseProxy db) {
      db_ = db;
      initComponents();
      modelServerList_ = new DefaultListModel();
      updateServerList();
   }
    private void updateServerList() {
      try {
         modelServerList_.clear();
         String[] fileNames = db_.getStopWordsFileNames();

         for (String name : fileNames) {
            modelServerList_.addElement(name);
         }
         lstServerFiles.setModel(modelServerList_);
      } catch (Exception ex) {
         Exceptions.printStackTrace(ex);
      }
      lstServerFiles.validate();
   }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      lblTitle = new javax.swing.JLabel();
      panelSelect = new javax.swing.JPanel();
      jScrollPane1 = new javax.swing.JScrollPane();
      lstTransferFiles = new MutableList();
      btnSelectFiles = new javax.swing.JButton();
      btnRemove = new javax.swing.JButton();
      btnRemoveAll = new javax.swing.JButton();
      jLabel1 = new javax.swing.JLabel();
      btnUploadToServer = new javax.swing.JButton();
      jPanel1 = new javax.swing.JPanel();
      jScrollPane2 = new javax.swing.JScrollPane();
      lstServerFiles = new javax.swing.JList();
      btnRemoveFromServer = new javax.swing.JButton();
      btnRemoveAllFromServer = new javax.swing.JButton();
      jLabel2 = new javax.swing.JLabel();

      lblTitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
      lblTitle.setText(org.openide.util.NbBundle.getMessage(PanelStopWordManager.class, "PanelStopWordManager.lblTitle.text")); // NOI18N

      panelSelect.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

      jScrollPane1.setViewportView(lstTransferFiles);

      btnSelectFiles.setText(org.openide.util.NbBundle.getMessage(PanelStopWordManager.class, "PanelStopWordManager.btnSelectFiles.text")); // NOI18N
      btnSelectFiles.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSelectFilesActionPerformed(evt);
         }
      });

      btnRemove.setText(org.openide.util.NbBundle.getMessage(PanelStopWordManager.class, "PanelStopWordManager.btnRemove.text")); // NOI18N
      btnRemove.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRemoveActionPerformed(evt);
         }
      });

      btnRemoveAll.setText(org.openide.util.NbBundle.getMessage(PanelStopWordManager.class, "PanelStopWordManager.btnRemoveAll.text")); // NOI18N
      btnRemoveAll.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRemoveAllActionPerformed(evt);
         }
      });

      jLabel1.setText(org.openide.util.NbBundle.getMessage(PanelStopWordManager.class, "PanelStopWordManager.jLabel1.text")); // NOI18N

      javax.swing.GroupLayout panelSelectLayout = new javax.swing.GroupLayout(panelSelect);
      panelSelect.setLayout(panelSelectLayout);
      panelSelectLayout.setHorizontalGroup(
         panelSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSelectLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
               .addComponent(btnRemoveAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
               .addComponent(btnSelectFiles))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panelSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jLabel1)
               .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(265, 265, 265))
      );
      panelSelectLayout.setVerticalGroup(
         panelSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(panelSelectLayout.createSequentialGroup()
            .addGap(12, 12, 12)
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(panelSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(panelSelectLayout.createSequentialGroup()
                  .addComponent(btnSelectFiles)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addComponent(btnRemove)
                  .addGap(18, 18, 18)
                  .addComponent(btnRemoveAll))
               .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE))
            .addContainerGap())
      );

      btnUploadToServer.setText(org.openide.util.NbBundle.getMessage(PanelStopWordManager.class, "PanelStopWordManager.btnUploadToServer.text")); // NOI18N
      btnUploadToServer.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnUploadToServerActionPerformed(evt);
         }
      });

      jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

      jScrollPane2.setViewportView(lstServerFiles);

      btnRemoveFromServer.setText(org.openide.util.NbBundle.getMessage(PanelStopWordManager.class, "PanelStopWordManager.btnRemoveFromServer.text")); // NOI18N
      btnRemoveFromServer.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRemoveFromServerActionPerformed(evt);
         }
      });

      btnRemoveAllFromServer.setText(org.openide.util.NbBundle.getMessage(PanelStopWordManager.class, "PanelStopWordManager.btnRemoveAllFromServer.text")); // NOI18N
      btnRemoveAllFromServer.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRemoveAllFromServerActionPerformed(evt);
         }
      });

      jLabel2.setText(org.openide.util.NbBundle.getMessage(PanelStopWordManager.class, "PanelStopWordManager.jLabel2.text")); // NOI18N

      javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel1Layout.createSequentialGroup()
                  .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(btnRemoveFromServer)
                     .addComponent(btnRemoveAllFromServer)))
               .addComponent(jLabel2))
            .addContainerGap(16, Short.MAX_VALUE))
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel2)
            .addGap(12, 12, 12)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel1Layout.createSequentialGroup()
                  .addComponent(btnRemoveFromServer)
                  .addGap(18, 18, 18)
                  .addComponent(btnRemoveAllFromServer))
               .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE))
            .addContainerGap())
      );

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addComponent(panelSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(btnUploadToServer)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addContainerGap())
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                  .addComponent(lblTitle)
                  .addGap(288, 288, 288))))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(11, 11, 11)
            .addComponent(lblTitle)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addGap(204, 204, 204)
                  .addComponent(btnUploadToServer))
               .addGroup(layout.createSequentialGroup()
                  .addGap(6, 6, 6)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                     .addComponent(panelSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(31, javax.swing.GroupLayout.PREFERRED_SIZE))
      );
   }// </editor-fold>//GEN-END:initComponents

    private void btnSelectFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectFilesActionPerformed
       File[] files = selectFiles();
       for (File file : files) {
          String fileName = file.getAbsolutePath();
          ((MutableList) lstTransferFiles).addElement(file);
       }
    }//GEN-LAST:event_btnSelectFilesActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
       ((MutableList) lstTransferFiles).removeSelectedElements();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAllActionPerformed
       ((MutableList) lstTransferFiles).removeAllElements();
    }//GEN-LAST:event_btnRemoveAllActionPerformed

    private void btnUploadToServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadToServerActionPerformed
         int n = lstTransferFiles.getModel().getSize();
       for (int i=0; i<n; i++) {
         try {
            FileItem fileItem = (FileItem) lstTransferFiles.getModel().getElementAt(i);
            db_.saveStopWords(fileItem.file.getAbsolutePath(), null);
         }
         catch (Exception ex) {
            Exceptions.printStackTrace(ex);
         }
       }
       updateServerList(); // TODO add your handling code here:
    }//GEN-LAST:event_btnUploadToServerActionPerformed

    private void btnRemoveFromServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFromServerActionPerformed
        try {
          int[] indices = lstServerFiles.getSelectedIndices();
          for (int i = indices.length - 1; i >= 0; --i) {

             String fileName = (String) lstServerFiles.getModel().getElementAt(indices[i]);
             db_.removeStopWords(fileName);


          }
          updateServerList();
       } catch (DbException ex) {
          Exceptions.printStackTrace(ex);
       }
    }//GEN-LAST:event_btnRemoveFromServerActionPerformed

    private void btnRemoveAllFromServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAllFromServerActionPerformed
        try {
          for (int i = 0; i <lstServerFiles.getModel().getSize(); i++) {
             String fileName = (String) lstServerFiles.getModel().getElementAt(i);
             db_.removeStopWords(fileName);
          }
          updateServerList();
       } catch (DbException ex) {
          Exceptions.printStackTrace(ex);
       }
    }//GEN-LAST:event_btnRemoveAllFromServerActionPerformed
 private File[] selectFiles() {

       //prefs = Preferences.userNodeForPackage(this.getClass());
       String lastDir = Global.prefs_.get("STOPWORDS_MANAGER_INPUT_DIR", "");
       JFileChooser fc = new JFileChooser(lastDir);
       fc.setMultiSelectionEnabled(true);

       FileExtFilter filter = new FileExtFilter("Stop Words Files","stw, txt, extensions");
       filter.addExtension("stw");
       filter.addExtension("txt");

       fc.addChoosableFileFilter(filter);
      
       fc.setAccessory(new TextFilePreview(fc));


        fc.showOpenDialog(this);

        File[] files;
        if ((files = fc.getSelectedFiles())!= null && files.length>0) {
           Global.prefs_.put("STOPWORDS_MANAGER_INPUT_DIR", files[0].getAbsolutePath());
            return files;
        }
        return null;
    }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton btnRemove;
   private javax.swing.JButton btnRemoveAll;
   private javax.swing.JButton btnRemoveAllFromServer;
   private javax.swing.JButton btnRemoveFromServer;
   private javax.swing.JButton btnSelectFiles;
   private javax.swing.JButton btnUploadToServer;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JLabel lblTitle;
   private javax.swing.JList lstServerFiles;
   private javax.swing.JList lstTransferFiles;
   private javax.swing.JPanel panelSelect;
   // End of variables declaration//GEN-END:variables

}
