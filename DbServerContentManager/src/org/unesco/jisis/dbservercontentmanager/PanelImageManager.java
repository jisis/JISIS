/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelImageEditor.java
 *
 * Created on 4 f√©vr. 2010, 17:08:05
 */

package org.unesco.jisis.dbservercontentmanager;

import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import org.openide.util.Exceptions;
import org.unesco.jisis.corelib.exceptions.DbException;
import org.unesco.jisis.dbservercontentmanager.MutableList.FileItem;
import org.unesco.jisis.gui.ImageFilter;
import org.unesco.jisis.gui.ImagePreview;
import org.unesco.jisis.jisiscore.client.ClientDatabaseProxy;

/**
 *
 * @author jcd
 */
public class PanelImageManager extends javax.swing.JPanel {

    private ClientDatabaseProxy db_;
    private DefaultListModel modelServerList_;

    /** Creates new form PanelImageEditor */
    public PanelImageManager(ClientDatabaseProxy db) {
       db_ = db;
        initComponents();
        modelServerList_ = new DefaultListModel();
        updateServerList();
    }

    private void updateServerList() {
      try {
         modelServerList_.clear();
         String[] images = db_.getImageFileNames();

         for (String name : images) {
            modelServerList_.addElement(name);
         }
         lstServerFiles.setModel(modelServerList_);
      } catch (Exception ex) {
         Exceptions.printStackTrace(ex);
      }
      lstServerFiles.validate();
   }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      lblImageSelect = new javax.swing.JLabel();
      btnSaveImageList = new javax.swing.JButton();
      panelSelect = new javax.swing.JPanel();
      btnImageSelect = new javax.swing.JButton();
      btnRemoveImages = new javax.swing.JButton();
      btnRemoveAll = new javax.swing.JButton();
      lblListToTransfer = new javax.swing.JLabel();
      scrollPaneImagesSelected = new javax.swing.JScrollPane();
      lstTransferFiles = new MutableList();
      panelServerList = new javax.swing.JPanel();
      scrollPaneServerList = new javax.swing.JScrollPane();
      lstServerFiles = new javax.swing.JList();
      btnRemoveFromServer = new javax.swing.JButton();
      btnRemoveAllFromServer = new javax.swing.JButton();
      lblImagesOnServer = new javax.swing.JLabel();

      lblImageSelect.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
      lblImageSelect.setText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.lblImageSelect.text")); // NOI18N

      btnSaveImageList.setText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.btnSaveImageList.text")); // NOI18N
      btnSaveImageList.setToolTipText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.btnSaveImageList.toolTipText")); // NOI18N
      btnSaveImageList.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSaveImageListActionPerformed(evt);
         }
      });

      panelSelect.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

      btnImageSelect.setText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.btnImageSelect.text")); // NOI18N
      btnImageSelect.setToolTipText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.btnImageSelect.toolTipText")); // NOI18N
      btnImageSelect.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnImageSelectActionPerformed(evt);
         }
      });

      btnRemoveImages.setText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.btnRemoveImages.text")); // NOI18N
      btnRemoveImages.setToolTipText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.btnRemoveImages.toolTipText")); // NOI18N
      btnRemoveImages.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRemoveImagesActionPerformed(evt);
         }
      });

      btnRemoveAll.setText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.btnRemoveAll.text")); // NOI18N
      btnRemoveAll.setToolTipText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.btnRemoveAll.toolTipText")); // NOI18N
      btnRemoveAll.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRemoveAllActionPerformed(evt);
         }
      });

      lblListToTransfer.setText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.lblListToTransfer.text")); // NOI18N

      scrollPaneImagesSelected.setViewportView(lstTransferFiles);

      javax.swing.GroupLayout panelSelectLayout = new javax.swing.GroupLayout(panelSelect);
      panelSelect.setLayout(panelSelectLayout);
      panelSelectLayout.setHorizontalGroup(
         panelSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(panelSelectLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(panelSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
               .addComponent(btnRemoveImages, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(btnImageSelect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(btnRemoveAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(18, 18, 18)
            .addGroup(panelSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(lblListToTransfer)
               .addComponent(scrollPaneImagesSelected, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE))
            .addContainerGap())
      );
      panelSelectLayout.setVerticalGroup(
         panelSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(panelSelectLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblListToTransfer)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panelSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(panelSelectLayout.createSequentialGroup()
                  .addComponent(btnImageSelect)
                  .addGap(18, 18, 18)
                  .addComponent(btnRemoveImages)
                  .addGap(18, 18, 18)
                  .addComponent(btnRemoveAll))
               .addComponent(scrollPaneImagesSelected, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE))
            .addContainerGap())
      );

      panelServerList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

      scrollPaneServerList.setViewportView(lstServerFiles);

      btnRemoveFromServer.setText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.btnRemoveFromServer.text")); // NOI18N
      btnRemoveFromServer.setToolTipText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.btnRemoveFromServer.toolTipText")); // NOI18N
      btnRemoveFromServer.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRemoveFromServerActionPerformed(evt);
         }
      });

      btnRemoveAllFromServer.setText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.btnRemoveAllFromServer.text")); // NOI18N
      btnRemoveAllFromServer.setToolTipText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.btnRemoveAllFromServer.toolTipText")); // NOI18N
      btnRemoveAllFromServer.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnRemoveAllFromServerActionPerformed(evt);
         }
      });

      lblImagesOnServer.setText(org.openide.util.NbBundle.getMessage(PanelImageManager.class, "PanelImageManager.lblImagesOnServer.text")); // NOI18N

      javax.swing.GroupLayout panelServerListLayout = new javax.swing.GroupLayout(panelServerList);
      panelServerList.setLayout(panelServerListLayout);
      panelServerListLayout.setHorizontalGroup(
         panelServerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(panelServerListLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(panelServerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(panelServerListLayout.createSequentialGroup()
                  .addComponent(scrollPaneServerList, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(panelServerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                     .addComponent(btnRemoveFromServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                     .addComponent(btnRemoveAllFromServer)))
               .addComponent(lblImagesOnServer))
            .addContainerGap(51, Short.MAX_VALUE))
      );
      panelServerListLayout.setVerticalGroup(
         panelServerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(panelServerListLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblImagesOnServer)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panelServerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(panelServerListLayout.createSequentialGroup()
                  .addComponent(btnRemoveFromServer)
                  .addGap(18, 18, 18)
                  .addComponent(btnRemoveAllFromServer))
               .addComponent(scrollPaneServerList, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE))
            .addContainerGap())
      );

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(panelSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(18, 18, 18)
                  .addComponent(btnSaveImageList)
                  .addGap(18, 18, 18)
                  .addComponent(panelServerList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(layout.createSequentialGroup()
                  .addGap(395, 395, 395)
                  .addComponent(lblImageSelect)))
            .addContainerGap(212, Short.MAX_VALUE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(11, 11, 11)
            .addComponent(lblImageSelect)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                  .addGap(251, 251, 251)
                  .addComponent(btnSaveImageList)
                  .addGap(257, 257, 257))
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                     .addComponent(panelServerList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                     .addComponent(panelSelect, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                  .addContainerGap())))
      );
   }// </editor-fold>//GEN-END:initComponents

    private void btnImageSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImageSelectActionPerformed
       File[] files = selectFiles();
       for (File file : files) {
          String fileName = file.getAbsolutePath();
          ((MutableList) lstTransferFiles).addElement(file);
       }

    }//GEN-LAST:event_btnImageSelectActionPerformed

    private File[] selectFiles() {

       //prefs = Preferences.userNodeForPackage(this.getClass());
       String lastDir = Global.prefs_.get("IMAGE_MANAGER_INPUT_DIR", "");
       JFileChooser fc = new JFileChooser(lastDir);
       fc.setMultiSelectionEnabled(true);
       
       fc.addChoosableFileFilter(new ImageFilter());
       ImagePreview.addPreview(fc);

        fc.showOpenDialog(this);
       
        File[] files;
        if ((files = fc.getSelectedFiles())!= null && files.length>0) {
           Global.prefs_.put("IMAGE_MANAGER_INPUT_DIR", files[0].getAbsolutePath());
            return files;
        }
        return null;
    }
    private void btnRemoveImagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveImagesActionPerformed
       ((MutableList) lstTransferFiles).removeSelectedElements();
    }//GEN-LAST:event_btnRemoveImagesActionPerformed

    private void btnRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAllActionPerformed
       ((MutableList) lstTransferFiles).removeAllElements();
    }//GEN-LAST:event_btnRemoveAllActionPerformed

    private void btnSaveImageListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveImageListActionPerformed
       int n = lstTransferFiles.getModel().getSize();
       for (int i=0; i<n; i++) {
         try {
            FileItem fileItem = (FileItem) lstTransferFiles.getModel().getElementAt(i);
            db_.saveImage(fileItem.file.getAbsolutePath(), null);
         }
         catch (Exception ex) {
            Exceptions.printStackTrace(ex);
         }
       }
       updateServerList();
    }//GEN-LAST:event_btnSaveImageListActionPerformed

    private void btnRemoveFromServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFromServerActionPerformed
       try {
          int[] indices = lstServerFiles.getSelectedIndices();
          for (int i = indices.length - 1; i >= 0; --i) {

             String fileName = (String) lstServerFiles.getModel().getElementAt(indices[i]);
             db_.removeImage(fileName);


          }
          updateServerList();
       } catch (DbException ex) {
          Exceptions.printStackTrace(ex);
       }
    }//GEN-LAST:event_btnRemoveFromServerActionPerformed

    private void btnRemoveAllFromServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAllFromServerActionPerformed
       try {

          for (int i = 0; i <lstServerFiles.getModel().getSize(); i++) {

             String fileName = (String) lstServerFiles.getModel().getElementAt(i);
             db_.removeImage(fileName);

          }
          updateServerList();
       } catch (DbException ex) {
          Exceptions.printStackTrace(ex);
       }

    }//GEN-LAST:event_btnRemoveAllFromServerActionPerformed


   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton btnImageSelect;
   private javax.swing.JButton btnRemoveAll;
   private javax.swing.JButton btnRemoveAllFromServer;
   private javax.swing.JButton btnRemoveFromServer;
   private javax.swing.JButton btnRemoveImages;
   private javax.swing.JButton btnSaveImageList;
   private javax.swing.JLabel lblImageSelect;
   private javax.swing.JLabel lblImagesOnServer;
   private javax.swing.JLabel lblListToTransfer;
   private javax.swing.JList lstServerFiles;
   private javax.swing.JList lstTransferFiles;
   private javax.swing.JPanel panelSelect;
   private javax.swing.JPanel panelServerList;
   private javax.swing.JScrollPane scrollPaneImagesSelected;
   private javax.swing.JScrollPane scrollPaneServerList;
   // End of variables declaration//GEN-END:variables

}
